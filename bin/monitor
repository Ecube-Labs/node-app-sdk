#!/usr/bin/env node

var ttn = require('../');

var region = process.argv[2];
var appId = process.argv[3];
var accessKey = process.argv[4];

console.log('[DEBUG]', 'Region:', region);
console.log('[DEBUG]', 'Application ID:', appId);
console.log('[DEBUG]', 'Application Access Key:', accessKey);

var client = new ttn.Client(region, appId, accessKey);

console.log('[DEBUG]', 'URL:', client.url);

client.mqtt.on('reconnect', console.log.bind(this, '[DEBUG]', 'MQTT Event:', 'reconnect'));
client.mqtt.on('close', console.log.bind(this, '[DEBUG]', 'MQTT Event:', 'close'));
// client.mqtt.on('offline', console.log.bind(this, '[DEBUG]', 'MQTT Event:', 'offline'));
// client.mqtt.on('packetsent', console.log.bind(this, '[DEBUG]', 'MQTT Event:', 'packetsent'));
// client.mqtt.on('packetreceive', console.log.bind(this, '[DEBUG]', 'MQTT Event:', 'packetreceive'));

client.on('connect', function(connack) {
	console.log('[DEBUG]', 'Connect:', connack);
});

client.on('error', function(err) {
	console.error('[ERROR]', err.message);
});

client.on('activation', function(e) {
	console.log('[INFO] ', 'Activation:', e.devEUI);
});

client.on('message', function(msg) {
	console.info('[INFO] ', 'Message:', JSON.stringify(msg, null, 2));
});